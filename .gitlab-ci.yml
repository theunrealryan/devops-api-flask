stages:
  - build
  - test
  - deploy
  - mirror

variables:
  DOCKER_HOST: tcp://docker:2375

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    # 1) Login no GitLab Registry
    - docker login registry.gitlab.com \
        -u "$CI_REGISTRY_USER" \
        -p "$CI_REGISTRY_PASSWORD"
    # 2) Build e tag
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    # 3) Push autenticado
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    - main


test:
  stage: test
  image: python:3.12
  script:
    - pip install -r requirements.txt pytest pytest-cov
    - pytest --cov=app
  artifacts:
    paths:
      - htmlcov/

deploy:
  stage: deploy
  script:
    - docker service update \
        --image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA \
        taskboard_web
  when: manual

mirror:
  stage: mirror
  image: alpine/git
  before_script:
    # prepara diretório SSH
    - mkdir -p ~/.ssh
    # injeta a chave File no id_ed25519_mirror
    - cp "$SSH_PRIVATE_KEY" ~/.ssh/id_ed25519_mirror
    - chmod 600 ~/.ssh/id_ed25519_mirror
    # confia no host GitHub (evita prompt)
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    # força o Git a usar nossa chave
    - git config --global core.sshCommand "ssh -i ~/.ssh/id_ed25519_mirror -o UserKnownHostsFile=$HOME/.ssh/known_hosts"
  script:
    # adiciona remoto GitHub (ignora se já existir)
    - git remote add github ssh://git@github.com:theunrealryan/devops-api-flask.git || true
    # espelha a branch main
    - git push github main
  only:
    - main
  when: on_success